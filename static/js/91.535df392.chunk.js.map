{"version":3,"file":"static/js/91.535df392.chunk.js","mappings":"sOAGaA,EAAaC,EAAAA,GAAAA,GAAH,qKAUVC,EAAYD,EAAAA,GAAAA,GAAH,+EAKTE,EAAiBF,EAAAA,GAAAA,OAAH,+U,yDCsE3B,EAvEe,WACb,OAA4DG,EAAAA,EAAAA,WAAS,GAArE,eAAOC,EAAP,KAA+BC,EAA/B,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,KAE3BC,EAAAA,EAAAA,YAAU,WACRL,GAASM,EAAAA,EAAAA,MACV,GAAE,CAACN,IAEJ,IAAMO,EAAyB,WAC7BR,GAA2BD,EAC5B,EAED,OACE,iCACE,SAAC,KAAD,KACA,SAAC,KAAD,WACE,SAAC,KAAD,WACE,SAAC,KAAD,UACqB,IAAlBI,EAAOM,QACN,gCACG,IACAV,IACC,SAAC,KAAD,CACEW,OAAQX,EACRY,QAASH,KAGb,UAAC,KAAD,YACE,UAAC,KAAD,WAAM,oBACY,2BAAOI,EAAAA,EAAAA,IAAkBT,SAE3C,SAACN,EAAD,CACEgB,KAAK,SACL,aAAW,kBACXC,QAASN,EAHX,UAKGO,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,UAAsBC,EAAAA,EAAAA,cAGvC,SAACvB,EAAD,UACGS,EAAOe,KAAI,SAAAC,GAAK,OACf,SAACvB,EAAD,WACE,SAAC,KAAD,CAAOuB,MAAOA,KADAA,EAAMC,GADP,UAQrB,gCACG,KACD,SAAC,KAAD,CAAcC,QAAQ,wCACrBtB,IACC,SAAC,KAAD,CACEW,OAAQX,EACRY,QAASH,KAGb,SAAC,KAAD,CAAQK,KAAK,SAASC,QAASN,EAA/B,SAAuD,4BAUtE,C","sources":["pages/Groups/Groups.styled.jsx","pages/Groups/Groups.jsx"],"sourcesContent":["import styled from 'styled-components';\n// import { getRandomColors } from 'utils/getRandomColor';\n\nexport const GroupsList = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  row-gap: 10px;\n`;\n\nexport const GroupItem = styled.li`\n  position: relative;\n  margin: 0;\n  display: flex;\n`;\nexport const AddNewGroupBtn = styled.button`\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  background-color: #f787b4;\n  border: none;\n  cursor: pointer;\n  transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: #ef4287;\n    color: white;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AppBar, CreateGroupModal, Group } from 'components';\nimport { Section, Notification } from 'shared';\nimport { GroupsList, GroupItem, AddNewGroupBtn } from './Groups.styled';\nimport {\n  ContentWrapper,\n  Main,\n  Button,\n  InfoWrap,\n  Info,\n} from 'shared/commonStyledComponents.jsx';\nimport { selectGroups } from 'redux/groups';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { renderIcons, getGroupsQuantity } from 'utils';\nimport { ICON_NAMES, ICON_SIZES } from 'constants';\n\nconst Groups = () => {\n  const [isCreateGroupModalOpen, setIsCreateGroupModalOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const groups = useSelector(selectGroups);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const toggleCreateGroupModal = () => {\n    setIsCreateGroupModalOpen(!isCreateGroupModalOpen);\n  };\n\n  return (\n    <>\n      <AppBar />\n      <Main>\n        <Section>\n          <ContentWrapper>\n            {groups.length !== 0 ? (\n              <>\n                {' '}\n                {isCreateGroupModalOpen && (\n                  <CreateGroupModal\n                    isOpen={isCreateGroupModalOpen}\n                    onClose={toggleCreateGroupModal}\n                  />\n                )}\n                <InfoWrap>\n                  <Info>\n                    Total quantity: <span>{getGroupsQuantity(groups)}</span>\n                  </Info>\n                  <AddNewGroupBtn\n                    type=\"button\"\n                    aria-label=\"Add new contact\"\n                    onClick={toggleCreateGroupModal}\n                  >\n                    {renderIcons(ICON_NAMES.GROUP_ADD, ICON_SIZES.MEDIUM)}\n                  </AddNewGroupBtn>\n                </InfoWrap>\n                <GroupsList>\n                  {groups.map(group => (\n                    <GroupItem key={group.id}>\n                      <Group group={group} />\n                    </GroupItem>\n                  ))}\n                </GroupsList>\n              </>\n            ) : (\n              <>\n                {' '}\n                <Notification message=\"You have not created any groups yet\" />\n                {isCreateGroupModalOpen && (\n                  <CreateGroupModal\n                    isOpen={isCreateGroupModalOpen}\n                    onClose={toggleCreateGroupModal}\n                  />\n                )}\n                <Button type=\"button\" onClick={toggleCreateGroupModal}>\n                  Create group\n                </Button>\n              </>\n            )}\n          </ContentWrapper>\n        </Section>\n      </Main>\n    </>\n  );\n};\n\nexport default Groups;\n"],"names":["GroupsList","styled","GroupItem","AddNewGroupBtn","useState","isCreateGroupModalOpen","setIsCreateGroupModalOpen","dispatch","useDispatch","groups","useSelector","selectGroups","useEffect","fetchContacts","toggleCreateGroupModal","length","isOpen","onClose","getGroupsQuantity","type","onClick","renderIcons","ICON_NAMES","ICON_SIZES","map","group","id","message"],"sourceRoot":""}
{"version":3,"file":"static/js/65.3c19897d.chunk.js","mappings":"mPAwGA,UA5FmB,WACjB,IAAMA,GAAkBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC9BC,GAAcF,EAAAA,EAAAA,IAAYG,EAAAA,IAC1BC,GAAWC,EAAAA,EAAAA,MACjB,GACEC,EAAAA,EAAAA,WAAS,GADX,eAAOC,EAAP,KAAmCC,EAAnC,KAEA,GAOIC,EAAAA,EAAAA,IAAeV,GANjBW,EADF,EACEA,kBACAC,EAFF,EAEEA,kBACAC,EAHF,EAGEA,iBACAC,EAJF,EAIEA,sBACAC,EALF,EAKEA,qBACAC,EANF,EAMEA,wBAGFC,EAAAA,EAAAA,YAAU,WACHd,GACHE,GAASa,EAAAA,EAAAA,MAGZ,GAAE,CAACb,IAEJ,IAAMc,EAA6B,WACjCV,GAA+BD,EAChC,EAOD,OACE,iCACE,SAAC,KAAD,KACA,SAAC,KAAD,WACE,SAAC,KAAD,WACE,SAAC,KAAD,YACI,OAACL,QAAD,IAACA,IAAAA,EAAaiB,UACd,kCACI,OAACpB,QAAD,IAACA,IAAAA,EAAiBoB,UAClB,SAAC,KAAD,CACEC,SAAUC,EAAAA,EAAAA,WACVC,MAAOvB,EACPwB,YAAaL,EACbM,kBAAmBb,EACnBc,OAAQf,IAGXA,IACC,SAAC,KAAD,CACEgB,iBAAkBZ,EAClBF,iBAAkBA,EAClBC,sBAAuBA,EACvBc,KAAMC,EAAAA,GAAAA,aAITrB,IACC,SAAC,KAAD,CACEsB,OAAQtB,EACRuB,QAASZ,EACTa,UAnCY,WAC5B3B,GAAS4B,EAAAA,EAAAA,QACTC,EAAAA,EAAAA,2BACAf,GACD,EAgCiBgB,OAAQC,EAAAA,GAAAA,aAITpC,EAAgBoB,QACjB,SAAC,IAAD,UACGpB,EAAgBqC,KAAI,SAAAC,GAAO,OAC1B,SAAC,IAAD,WACE,SAAC,KAAD,CACEA,QAASA,EACTnC,YAAaA,EACbQ,kBAAmBA,EACnBE,iBAAkBA,EAClBG,uBAAwBA,KANVsB,EAAQC,GADA,OAa9B,SAAC,KAAD,CAAcC,QAAQ,wDASvC,C","sources":["pages/RecycleBin/RecycleBin.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { List, ContactItem } from 'components/ContactList/ContactList.styled';\nimport { DeletedContact, AppBar, ConfirmationModal } from 'components';\nimport { Section, Notification, ListHeader, MultiSelectBar } from 'shared';\nimport { ContentWrapper, Main } from 'shared/commonStyledComponents.jsx';\nimport { selectRecycleBinContacts, clearRecycleBin } from 'redux/recycleBin';\nimport { selectContacts, fetchContacts } from 'redux/contacts';\nimport { ITEM_CATEGORIES, CONTACT_ACTIONS, ROUTES } from 'constants';\nimport { showRecyclebinClearInfo } from 'utils/notifications';\nimport { useMultiSelect } from 'hooks';\n\nconst RecycleBin = () => {\n  const deletedContacts = useSelector(selectRecycleBinContacts);\n  const allContacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const [isClearRecyclebinModalOpen, setIsClearRecyclebinModalOpen] =\n    useState(false);\n  const {\n    isMultiSelectOpen,\n    toggleMultiSelect,\n    selectedContacts,\n    resetSelectedContacts,\n    handleSelectAllClick,\n    updateSelectedContacts,\n  } = useMultiSelect(deletedContacts);\n\n  useEffect(() => {\n    if (!allContacts) {\n      dispatch(fetchContacts());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch]);\n\n  const toggleClearRecyclebinModal = () => {\n    setIsClearRecyclebinModalOpen(!isClearRecyclebinModalOpen);\n  };\n\n  const handleClearRecycleBin = () => {\n    dispatch(clearRecycleBin());\n    showRecyclebinClearInfo();\n    toggleClearRecyclebinModal();\n  };\n  return (\n    <>\n      <AppBar />\n      <Main>\n        <Section>\n          <ContentWrapper>\n            {!!allContacts?.length && (\n              <>\n                {!!deletedContacts?.length && (\n                  <ListHeader\n                    category={ITEM_CATEGORIES.RECYCLEBIN}\n                    items={deletedContacts}\n                    handleClick={toggleClearRecyclebinModal}\n                    handleSelectClick={toggleMultiSelect}\n                    active={isMultiSelectOpen}\n                  />\n                )}\n                {isMultiSelectOpen && (\n                  <MultiSelectBar\n                    onSelectAllClick={handleSelectAllClick}\n                    selectedContacts={selectedContacts}\n                    resetSelectedContacts={resetSelectedContacts}\n                    page={ROUTES.RECYCLEBIN}\n                  />\n                )}\n\n                {isClearRecyclebinModalOpen && (\n                  <ConfirmationModal\n                    isOpen={isClearRecyclebinModalOpen}\n                    onClose={toggleClearRecyclebinModal}\n                    onConfirm={handleClearRecycleBin}\n                    action={CONTACT_ACTIONS.DELETE_ALL}\n                  />\n                )}\n\n                {!!deletedContacts.length ? (\n                  <List>\n                    {deletedContacts.map(contact => (\n                      <ContactItem key={contact.id}>\n                        <DeletedContact\n                          contact={contact}\n                          allContacts={allContacts}\n                          isMultiSelectOpen={isMultiSelectOpen}\n                          selectedContacts={selectedContacts}\n                          updateSelectedContacts={updateSelectedContacts}\n                        />\n                      </ContactItem>\n                    ))}\n                  </List>\n                ) : (\n                  <Notification message=\"There are no contacts in recycle bin now\" />\n                )}\n              </>\n            )}\n          </ContentWrapper>\n        </Section>\n      </Main>\n    </>\n  );\n};\n\nexport default RecycleBin;\n"],"names":["deletedContacts","useSelector","selectRecycleBinContacts","allContacts","selectContacts","dispatch","useDispatch","useState","isClearRecyclebinModalOpen","setIsClearRecyclebinModalOpen","useMultiSelect","isMultiSelectOpen","toggleMultiSelect","selectedContacts","resetSelectedContacts","handleSelectAllClick","updateSelectedContacts","useEffect","fetchContacts","toggleClearRecyclebinModal","length","category","ITEM_CATEGORIES","items","handleClick","handleSelectClick","active","onSelectAllClick","page","ROUTES","isOpen","onClose","onConfirm","clearRecycleBin","showRecyclebinClearInfo","action","CONTACT_ACTIONS","map","contact","id","message"],"sourceRoot":""}
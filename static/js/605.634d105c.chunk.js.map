{"version":3,"file":"static/js/605.634d105c.chunk.js","mappings":"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","sources":["pages/Contacts/Contacts.styled.jsx","pages/EditContact/EditContact.styled.jsx","pages/EditContact/EditContact.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Info = styled.p`\n  font-size: 24px;\n  span {\n    font-weight: 700;\n  }\n`;\n\nexport const ContentWrapper = styled.div`\n  position: relative;\n  width: 800px;\n  display: flex;\n  flex-direction: column;\n  row-gap: 40px;\n`;\n\nexport const AddNewContactBtn = styled.button`\n  position: absolute;\n  right: 0;\n  border-radius: 50%;\n  display: flex;\n  column-gap: 10px;\n  min-width: 40px;\n  align-self: center;\n  align-items: center;\n  padding: 10px 10px;\n  background-color: #f787b4;\n  color: black;\n  border: 5px solid transparent;\n  font-size: 20px;\n  font-weight: 800;\n  box-shadow: 5px 5px 8px 1px rgba(112, 111, 111, 1);\n  cursor: pointer;\n  transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: #ef4287;\n    color: white;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const EditFormTitle = styled.div`\n  text-transform: uppercase;\n  font-size: 24px;\n  text-align: center;\n  padding: 10px;\n`;\n\nexport const EditFormInfo = styled.div`\n  background-color: white;\n  font-size: 20px;\n  margin-top: 20px;\n  width: 100%;\n  padding: 20px;\n  font-size: 24px;\n  font-weight: 600;\n  border-radius: 10px;\n`;\n\nexport const ContactInfo = styled.p`\n  display: flex;\n  column-gap: 30px;\n  margin-top: 10px;\n`;\n\nexport const ContactCategory = styled.span`\n  width: 100px;\n  font-style: italic;\n`;\n\nexport const EditFormInstrc = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n`;\n\nexport const EditFormText = styled.p`\n  font-size: 24px;\n  padding-left: 10px;\n  padding-right: 10px;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, useLocation, useParams, useNavigate } from 'react-router-dom';\nimport { Section, Form, IconButton, Loader } from 'components';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport {\n  fetchContacts,\n  updateContact,\n} from 'redux/contacts/contactsOperations';\nimport { ContentWrapper } from 'pages/Contacts/Contacts.styled';\nimport {\n  EditFormInfo,\n  EditFormInstrc,\n  EditFormText,\n  ContactInfo,\n  ContactCategory,\n} from './EditContact.styled';\nimport {\n  renderIcons,\n  Notifications,\n  isExistByNumber,\n  isExistByName,\n} from 'utils';\nimport { iconSize } from 'constants';\n\nconst EditContact = () => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { contactId } = useParams();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(selectContacts);\n  const contact = getContactById({ contactId, contacts });\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  useEffect(() => {\n    if (contact) {\n      setName(contact.name);\n      setNumber(contact.number);\n    }\n  }, [contact]);\n\n  const backLinkHref = location.state?.from ?? '/contacts';\n\n  function getContactById({ contactId, contacts }) {\n    return contacts.find(contact => contact.id === contactId);\n  }\n\n  function editContact(updatedContact) {\n    const edittedContact = { ...contact, ...updatedContact };\n    dispatch(updateContact(edittedContact));\n    Notifications.showEditContactSuccess(contact, updatedContact);\n  }\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    name === 'name' ? setName(value) : setNumber(value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (contact.name !== name && contact.number !== number) {\n      return Notifications.showEditContactFailure();\n    }\n\n    if (contact.name === name && contact.number === number) {\n      Notifications.showNoChangesMessage();\n      return navigate('/contacts');\n    }\n\n    const updatedContact = { name, number };\n    const isNameExist = isExistByName({ newName: name, contact, contacts });\n    const isNumberExist = isExistByNumber({\n      newNumber: number,\n      contact,\n      contacts,\n    });\n    const isDuplicate = isNameExist || isNumberExist;\n\n    if (isDuplicate) {\n      return Notifications.showContactExistWarn({\n        isNameExist,\n        isNumberExist,\n        contact: updatedContact,\n      });\n    }\n\n    editContact(updatedContact);\n    navigate('/contacts');\n  }\n\n  return contact ? (\n    <main>\n      <Section>\n        <ContentWrapper>\n          <Link to={backLinkHref}>\n            <IconButton aria-label=\"Back to previous page\">\n              {renderIcons('back', iconSize.sm)}\n            </IconButton>\n          </Link>\n          <>\n            <EditFormInfo>\n              <p>You try to edit contact with</p>\n              <ContactInfo>\n                <ContactCategory>Name:</ContactCategory>\n                <span>\n                  <b>{contact.name}</b>\n                </span>\n              </ContactInfo>\n              <ContactInfo>\n                <ContactCategory>Number:</ContactCategory>\n                <span>\n                  <b>{contact.number}</b>\n                </span>\n              </ContactInfo>\n            </EditFormInfo>\n            <EditFormInstrc>\n              <EditFormText>\n                It is allowed change only <b> name</b> OR <b>number</b>\n              </EditFormText>\n              <EditFormText>\n                If you want to change <b> both name AND number</b>, please\n                delete this contact and create new one with correct info\n              </EditFormText>\n            </EditFormInstrc>\n            <Form\n              name={name}\n              number={number}\n              operationType=\"Edit contact\"\n              onSubmit={handleSubmit}\n              onChange={handleChange}\n            />\n          </>\n        </ContentWrapper>\n      </Section>\n    </main>\n  ) : (\n    <Loader />\n  );\n};\n\nexport default EditContact;\n"],"names":["Info","styled","ContentWrapper","AddNewContactBtn","EditFormInfo","ContactInfo","ContactCategory","EditFormInstrc","EditFormText","location","useLocation","dispatch","useDispatch","navigate","useNavigate","contactId","useParams","useEffect","fetchContacts","contacts","useSelector","selectContacts","contact","find","id","getContactById","useState","name","setName","number","setNumber","backLinkHref","state","from","to","renderIcons","iconSize","operationType","onSubmit","e","preventDefault","Notifications","updatedContact","isNameExist","isExistByName","newName","isNumberExist","isExistByNumber","newNumber","edittedContact","updateContact","editContact","onChange","target","value"],"sourceRoot":""}
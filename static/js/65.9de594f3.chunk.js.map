{"version":3,"file":"static/js/65.9de594f3.chunk.js","mappings":"mPAsHA,UAjGmB,WACjB,IAAMA,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,GAAkBF,EAAAA,EAAAA,IAAYG,EAAAA,IAE9BC,GAA6BJ,EAAAA,EAAAA,IACjCK,EAAAA,IAEIC,GAASN,EAAAA,EAAAA,KAAYO,EAAAA,EAAAA,GAAaC,EAAAA,GAAAA,aAClCC,GAAWC,EAAAA,EAAAA,MACjB,GACEC,EAAAA,EAAAA,WAAS,GADX,eAAOC,EAAP,KAAmCC,EAAnC,KAEA,GAOIC,EAAAA,EAAAA,IAAeZ,EAAiBM,EAAAA,GAAAA,YANlCO,EADF,EACEA,kBACAC,EAFF,EAEEA,kBACAC,EAHF,EAGEA,cACAC,EAJF,EAIEA,mBACAC,EALF,EAKEA,qBACAC,EANF,EAMEA,qBAEFC,EAAAA,EAAAA,YAAU,WACHtB,GACHU,GAASa,EAAAA,EAAAA,MAGZ,GAAE,CAACb,IAEJ,IAAMc,EAA6B,WACjCV,GAA+BD,EAChC,EAOKY,IAAelB,KAAW,OAACJ,QAAD,IAACA,IAAAA,EAAiBuB,QAWlD,OACE,iCACE,SAAC,KAAD,KACA,SAAC,KAAD,WACE,SAAC,KAAD,WACE,SAAC,KAAD,YACI,OAAC1B,QAAD,IAACA,IAAAA,EAAa0B,UACd,iCACE,SAAC,KAAD,CACEC,SAAUC,EAAAA,EAAAA,WACVC,KAAMpB,EAAAA,GAAAA,WACNqB,MAAO3B,EACP4B,mBAAoBP,EACpBR,kBAAmBA,EACnBC,kBAAmBA,EACnBC,cAAeA,EACfC,mBAAoBA,EACpBC,qBAAsBA,IAGvBP,IACC,SAAC,KAAD,CACEmB,OAAQnB,EACRoB,QAAST,EACTU,UAxCY,WAC5BxB,GAASyB,EAAAA,EAAAA,QACTC,EAAAA,EAAAA,2BACAZ,GACD,EAqCiBa,OAAQC,EAAAA,GAAAA,aAIe,OAA1BjC,QAA0B,IAA1BA,GAAAA,EAA4BqB,QAC3B,SAAC,KAAD,CACEI,MAAOzB,EACPkC,WA1CI,SAAAC,GACpB,OACE,SAAC,KAAD,CACEA,QAASA,EACTxB,kBAAmBA,EACnBE,cAAeA,EACfG,oBAAqBA,GAG1B,EAkCiBQ,KAAMpB,EAAAA,GAAAA,aAENgB,GACF,SAAC,KAAD,CACEgB,QAAO,2FAAsFlC,EAAtF,QAGT,SAAC,KAAD,CAAckC,QAAQ,wDASvC,C","sources":["pages/RecycleBin/RecycleBin.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  DeletedContact,\n  AppBar,\n  ConfirmationModal,\n  ItemsList,\n} from 'components';\nimport { Section, Notification, ActionsMenu } from 'shared';\nimport { ContentWrapper, Main } from 'shared/commonStyledComponents.jsx';\nimport {\n  selectRecyclebinContacts,\n  clearRecycleBin,\n  selectFilteredRecyclebinContacts,\n} from 'redux/recycleBin';\nimport { selectContacts, fetchContacts } from 'redux/contacts';\nimport { selectFilter } from 'redux/filters';\nimport { ITEM_CATEGORIES, CONTACT_ACTIONS, ROUTES } from 'constants';\nimport { showRecyclebinClearInfo } from 'utils/notifications';\nimport { useMultiSelect } from 'hooks';\n\nconst RecycleBin = () => {\n  const allContacts = useSelector(selectContacts);\n  const deletedContacts = useSelector(selectRecyclebinContacts);\n\n  const filteredRecyclebinContacts = useSelector(\n    selectFilteredRecyclebinContacts\n  );\n  const filter = useSelector(selectFilter(ROUTES.RECYCLEBIN));\n  const dispatch = useDispatch();\n  const [isClearRecyclebinModalOpen, setIsClearRecyclebinModalOpen] =\n    useState(false);\n  const {\n    isMultiSelectOpen,\n    toggleMultiSelect,\n    selectedItems,\n    resetSelectedItems,\n    handleSelectAllClick,\n    updateSelectedItems,\n  } = useMultiSelect(deletedContacts, ROUTES.RECYCLEBIN);\n  useEffect(() => {\n    if (!allContacts) {\n      dispatch(fetchContacts());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch]);\n\n  const toggleClearRecyclebinModal = () => {\n    setIsClearRecyclebinModalOpen(!isClearRecyclebinModalOpen);\n  };\n\n  const handleClearRecycleBin = () => {\n    dispatch(clearRecycleBin());\n    showRecyclebinClearInfo();\n    toggleClearRecyclebinModal();\n  };\n  const isFiltered = !!filter && !!deletedContacts?.length;\n  const renderContact = contact => {\n    return (\n      <DeletedContact\n        contact={contact}\n        isMultiSelectOpen={isMultiSelectOpen}\n        selectedItems={selectedItems}\n        updateSelectedItems={updateSelectedItems}\n      />\n    );\n  };\n  return (\n    <>\n      <AppBar />\n      <Main>\n        <Section>\n          <ContentWrapper>\n            {!!allContacts?.length && (\n              <>\n                <ActionsMenu\n                  category={ITEM_CATEGORIES.RECYCLEBIN}\n                  page={ROUTES.RECYCLEBIN}\n                  items={deletedContacts}\n                  handleMainBtnClick={toggleClearRecyclebinModal}\n                  isMultiSelectOpen={isMultiSelectOpen}\n                  toggleMultiSelect={toggleMultiSelect}\n                  selectedItems={selectedItems}\n                  resetSelectedItems={resetSelectedItems}\n                  handleSelectAllClick={handleSelectAllClick}\n                />\n\n                {isClearRecyclebinModalOpen && (\n                  <ConfirmationModal\n                    isOpen={isClearRecyclebinModalOpen}\n                    onClose={toggleClearRecyclebinModal}\n                    onConfirm={handleClearRecycleBin}\n                    action={CONTACT_ACTIONS.DELETE_ALL}\n                  />\n                )}\n\n                {filteredRecyclebinContacts?.length ? (\n                  <ItemsList\n                    items={filteredRecyclebinContacts}\n                    renderItem={renderContact}\n                    page={ROUTES.RECYCLEBIN}\n                  />\n                ) : isFiltered ? (\n                  <Notification\n                    message={`No contacts found matching your search criteria for names or numbers containing '${filter}'`}\n                  />\n                ) : (\n                  <Notification message=\"There are no contacts in recycle bin now\" />\n                )}\n              </>\n            )}\n          </ContentWrapper>\n        </Section>\n      </Main>\n    </>\n  );\n};\n\nexport default RecycleBin;\n"],"names":["allContacts","useSelector","selectContacts","deletedContacts","selectRecyclebinContacts","filteredRecyclebinContacts","selectFilteredRecyclebinContacts","filter","selectFilter","ROUTES","dispatch","useDispatch","useState","isClearRecyclebinModalOpen","setIsClearRecyclebinModalOpen","useMultiSelect","isMultiSelectOpen","toggleMultiSelect","selectedItems","resetSelectedItems","handleSelectAllClick","updateSelectedItems","useEffect","fetchContacts","toggleClearRecyclebinModal","isFiltered","length","category","ITEM_CATEGORIES","page","items","handleMainBtnClick","isOpen","onClose","onConfirm","clearRecycleBin","showRecyclebinClearInfo","action","CONTACT_ACTIONS","renderItem","contact","message"],"sourceRoot":""}
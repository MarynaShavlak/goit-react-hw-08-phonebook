{"version":3,"file":"static/js/107.8c454caf.chunk.js","mappings":"iNAEaA,EAAmBC,EAAAA,GAAAA,OAAH,+UAehBC,EAAaD,EAAAA,GAAAA,GAAH,wH,4EC8FvB,EAvFiB,WACf,IAAME,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,KAE7BC,EAAAA,EAAAA,YAAU,WACHH,GACHN,GAASU,EAAAA,EAAAA,MAEZ,GAAE,CAACJ,EAAUN,IAEd,IAAMW,GAAmBJ,EAAAA,EAAAA,IAAYK,EAAAA,IAC/BC,GAAcN,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BM,GAAYP,EAAAA,EAAAA,IAAYQ,EAAAA,IACxBC,GAAQT,EAAAA,EAAAA,IAAYU,EAAAA,IACpBC,GAAeX,EAAAA,EAAAA,IAAYY,EAAAA,IAC3BC,GAAiBb,EAAAA,EAAAA,IAAYc,EAAAA,IAC7BC,KACDJ,KAAkBE,MAAqBP,EAAYU,OAExD,OACE,iCACE,SAAC,KAAD,KACA,SAAC,KAAD,WACE,SAAC,KAAD,WACE,UAAC,KAAD,WAC0B,IAAvBV,EAAYU,SACX,iCACE,UAAC,KAAD,YACE,UAAC,KAAD,WAAM,kBACY,KAChB,2BAAOC,EAAAA,EAAAA,IAAoBX,SAE7B,SAAChB,EAAD,CACE4B,KAAK,SACL,aAAW,kBACXC,QAAS,kBAAMxB,EAAS,UAAf,EAHX,UAKGyB,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,IAAgBC,EAAAA,EAAAA,eAIjC,UAAC9B,EAAD,YACE,yBACE,SAAC,KAAD,CAAQ+B,KAAK,YAEf,yBACE,SAAC,KAAD,CAAQA,KAAK,mBAMpBhB,GACC,SAAC,KAAD,IACEE,IAAuB,IAAdF,GACX,SAAC,KAAD,IACEH,EAAiBY,QACnB,+BACE,SAAC,KAAD,CAAaQ,MAAO,CAAEC,KAAM5B,OAE5BkB,GACF,SAAC,KAAD,CACEW,QACEf,GAAgBE,EAAhB,0CACuCF,EADvC,0BACqEE,EADrE,KAEIF,EAAY,0CACuBA,EADvB,kDAEyBE,EAFzB,SAMpB,iCACE,SAAC,KAAD,CAAca,QAAQ,yFACtB,SAAC,KAAD,CAAQR,KAAK,SAASC,QAAS,kBAAMxB,EAAS,UAAf,EAA/B,SAA0D,4BAUzE,C","sources":["pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const AddNewContactBtn = styled.button`\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  background-color: #f787b4;\n  border: none;\n  cursor: pointer;\n  transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: #ef4287;\n    color: white;\n  }\n`;\n\nexport const FilterList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  li {\n    width: calc(50% - 10px);\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { FilterList, AddNewContactBtn } from './Contacts.styled';\nimport {\n  ContentWrapper,\n  Main,\n  Button,\n  InfoWrap,\n  Info,\n} from 'shared/commonStyledComponents.jsx';\nimport { ContactList, Filter, Loader, AppBar } from 'components';\nimport { Section, ErrorMessage, Notification } from 'shared';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n  selectFilteredContacts,\n  fetchContacts,\n} from 'redux/contacts';\nimport { selectFilterByName, selectFilterByNumber } from 'redux/filters';\nimport { getContactsQuantity, renderIcons } from 'utils';\nimport { ICON_NAMES, ICON_SIZES } from 'constants';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    if (!contacts) {\n      dispatch(fetchContacts());\n    }\n  }, [contacts, dispatch]);\n\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const allContacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filterByName = useSelector(selectFilterByName);\n  const filterByNumber = useSelector(selectFilterByNumber);\n  const isFiltered =\n    (!!filterByName || !!filterByNumber) && !!allContacts.length;\n\n  return (\n    <>\n      <AppBar />\n      <Main>\n        <Section>\n          <ContentWrapper>\n            {allContacts.length !== 0 && (\n              <>\n                <InfoWrap>\n                  <Info>\n                    Total quantity:{' '}\n                    <span>{getContactsQuantity(allContacts)}</span>\n                  </Info>\n                  <AddNewContactBtn\n                    type=\"button\"\n                    aria-label=\"Add new contact\"\n                    onClick={() => navigate('/create')}\n                  >\n                    {renderIcons(ICON_NAMES.ADD, ICON_SIZES.MEDIUMm)}\n                  </AddNewContactBtn>\n                </InfoWrap>\n\n                <FilterList>\n                  <li>\n                    <Filter name=\"name\" />\n                  </li>\n                  <li>\n                    <Filter name=\"number\" />\n                  </li>\n                </FilterList>\n              </>\n            )}\n\n            {isLoading ? (\n              <Loader />\n            ) : error && isLoading === false ? (\n              <ErrorMessage />\n            ) : filteredContacts.length ? (\n              <>\n                <ContactList state={{ from: location }} />\n              </>\n            ) : isFiltered ? (\n              <Notification\n                message={\n                  filterByName && filterByNumber\n                    ? `Nothing found by selected name \"${filterByName}\"  and number \"${filterByNumber}\"`\n                    : filterByName\n                    ? `Nothing found by selected name \"${filterByName}\" `\n                    : `Nothing found by selected number \"${filterByNumber}\" `\n                }\n              />\n            ) : (\n              <>\n                <Notification message=\"Add your first contact today and discover the amazing possibilities of Phone Genie!\" />\n                <Button type=\"button\" onClick={() => navigate('/create')}>\n                  Add contact\n                </Button>\n              </>\n            )}\n          </ContentWrapper>\n        </Section>\n      </Main>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["AddNewContactBtn","styled","FilterList","dispatch","useDispatch","navigate","useNavigate","location","useLocation","contacts","useSelector","selectContacts","useEffect","fetchContacts","filteredContacts","selectFilteredContacts","allContacts","isLoading","selectIsLoading","error","selectError","filterByName","selectFilterByName","filterByNumber","selectFilterByNumber","isFiltered","length","getContactsQuantity","type","onClick","renderIcons","ICON_NAMES","ICON_SIZES","name","state","from","message"],"sourceRoot":""}
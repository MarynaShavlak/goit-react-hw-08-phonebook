{"version":3,"file":"static/js/605.86caa1bf.chunk.js","mappings":"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","sources":["components/AppBar/AppBar.styled.jsx","components/AppBar/AppBar.jsx","components/Form/Form.styled.jsx","pages/Contacts/Contacts.styled.jsx","pages/EditContact/EditContact.styled.jsx","pages/EditContact/EditContact.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Header = styled.header`\n  border-bottom: 4px solid #fc458e;\n  /* margin-bottom: 30px; */\n`;\n\nexport const StyledAppBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (max-width: 767px) {\n    column-gap: 20px;\n  }\n  @media screen and (min-width: ${props => props.theme.devices.tablet}) {\n    justify-content: space-between;\n  }\n  margin: 0 auto;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n","import { Navigation, UserMenu } from 'components';\nimport { Header } from './AppBar.styled';\nimport { StyledAppBar } from './AppBar.styled';\nimport { useAuth } from 'hooks';\n\nexport const AppBar = () => {\n  const { isLoggedIn } = useAuth();\n  return (\n    <>\n      <Header>\n        <StyledAppBar>\n          <Navigation />\n          {isLoggedIn && <UserMenu />}\n        </StyledAppBar>\n      </Header>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport PhoneInput from 'react-phone-number-input';\n\nexport const Form = styled.form`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  row-gap: 30px;\n`;\nexport const FormList = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  row-gap: 25px;\n`;\n\nexport const FormItem = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  row-gap: 8px;\n  label {\n    font-size: 14px;\n    @media screen and (min-width: ${props => props.theme.devices.tablet}) {\n      font-size: 16px;\n    }\n    font-weight: 700;\n  }\n`;\n\nexport const Name = styled.input`\n  width: 100%;\n  padding-left: 20px;\n  font-size: 14px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  @media screen and (min-width: ${props => props.theme.devices.tablet}) {\n    font-size: 16px;\n  }\n  font-weight: 600;\n  line-height: 1.5;\n  color: #f66fa5;\n  border: 3px solid #fab7d2;\n  border-radius: 10px;\n  &:focus {\n    outline: none;\n    border: 3px solid #f787b4;\n  }\n`;\n\nexport const BackButton = styled(NavLink)`\n  button {\n    display: flex;\n    align-self: center;\n    align-items: center;\n    background-color: transparent;\n    color: black;\n    border: none;\n    cursor: pointer;\n    transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1),\n      color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover {\n      color: #f787b4;\n    }\n  }\n\n  svg {\n    width: 30px;\n    height: 30px;\n    @media screen and (min-width: ${props => props.theme.devices.tablet}) {\n      width: 50px;\n      height: 50px;\n    }\n  }\n`;\n\nexport const Phone = styled(PhoneInput)`\n  width: 100%;\n  padding-left: 20px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  border: 3px solid #fab7d2;\n  border-radius: 10px;\n\n  &.PhoneInput--focus {\n    outline: none;\n    border: 3px solid #f787b4;\n  }\n\n  .PhoneInputCountryIcon {\n    height: 20px;\n    width: auto;\n  }\n  .PhoneInputCountryIcon--border {\n    box-shadow: none;\n    border: 1px solid black;\n  }\n\n  .PhoneInputCountrySelect:focus + .PhoneInputCountryIcon--border {\n    box-shadow: none;\n  }\n\n  .PhoneInputCountrySelectArrow {\n    color: black;\n  }\n\n  .PhoneInputCountrySelect:focus\n    + .PhoneInputCountryIcon\n    + .PhoneInputCountrySelectArrow {\n    opacity: 1;\n    color: #f66fa5;\n  }\n  .PhoneInputInput {\n    border: none;\n    outline: none;\n    height: 100%;\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.5;\n    @media screen and (min-width: ${props => props.theme.devices.tablet}) {\n      font-size: 16px;\n    }\n    color: #f66fa5;\n  }\n\n  .PhoneInputCountrySelect {\n    font-size: 12px;\n    border: none;\n    ::-webkit-scrollbar {\n      width: 6px;\n    }\n    ::-webkit-scrollbar-track {\n      border-radius: 12px;\n      margin-left: 10px;\n      background: #fde7f0;\n    }\n    ::-webkit-scrollbar-thumb {\n      background: #fde7f0;\n      border-radius: 12px;\n      margin-left: 10px;\n    }\n    ::-webkit-scrollbar-thumb:hover {\n      background: #f66fa5;\n    }\n    option {\n      color: black;\n      background-color: #fde7f0;\n    }\n  }\n`;\n\nexport const Error = styled.p`\n  position: absolute;\n  bottom: -25px;\n  @media screen and (min-width: ${props => props.theme.devices.mobile}) {\n    bottom: -15px;\n  }\n  width: 100%;\n  margin: 0;\n  margin-top: 5px;\n  font-size: 10px;\n  font-weight: 700;\n  color: red;\n`;\n","import styled from 'styled-components';\nimport { Container } from 'components/SharedLayout/SharedLayout.styled';\n\nexport const Info = styled.p`\n  font-size: 16px;\n  @media screen and (min-width: ${props => props.theme.devices.tablet}) {\n    font-size: 18px;\n  }\n\n  span {\n    font-weight: 700;\n  }\n`;\nexport const InfoWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid #f787b4;\n  border-top: 1px solid #f787b4;\n`;\nexport const ContentWrapper = styled(Container)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n  padding: 0;\n  min-width: 290px;\n  @media screen and (min-width: ${props => props.theme.devices.mobile}) {\n    width: 345px;\n  }\n  @media screen and (min-width: ${props => props.theme.devices.tablet}) {\n    width: 700px;\n  }\n  @media screen and (min-width: ${props => props.theme.devices.desktop}) {\n    width: 800px;\n  }\n`;\n\nexport const AddNewContactBtn = styled.button`\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  background-color: #f787b4;\n  border: none;\n  cursor: pointer;\n  transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: #ef4287;\n    color: white;\n  }\n`;\n\nexport const FilterList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  li {\n    width: calc(50% - 10px);\n  }\n`;\n","import styled from 'styled-components';\n\nexport const EditFormInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n  padding: 10px;\n  background-color: #fab7d2;\n  border-radius: 10px;\n  font-size: 14px;\n  font-weight: 600;\n  @media screen and (min-width: ${props => props.theme.devices.tablet}) {\n    font-size: 16px;\n  }\n  p {\n    display: flex;\n    column-gap: 10px;\n  }\n  p span:first-child {\n    width: 100px;\n    font-style: italic;\n  }\n`;\n\nexport const EditFormInstrc = styled.div`\n  display: flex;\n  p {\n    padding-left: 10px;\n    padding-right: 10px;\n    font-size: 12px;\n    line-height: 1.5;\n    font-style: italic;\n    text-align: justify;\n    @media screen and (min-width: ${props => props.theme.devices.tablet}) {\n      font-size: 14px;\n    }\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { Section, ContactForm, Loader } from 'components';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { ContentWrapper } from 'pages/Contacts/Contacts.styled';\nimport { EditFormInfo, EditFormInstrc } from './EditContact.styled';\nimport { renderIcons } from 'utils';\nimport { BackButton } from 'components/Form/Form.styled';\nimport { AppBar } from 'components/AppBar/AppBar';\nimport { showEditContactSuccess } from 'utils/notifications';\nimport { useNavigate } from 'react-router-dom';\n\nconst EditContact = () => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { contactId } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getContactById = ({ contactId, contacts }) => {\n    return contacts.find(contact => contact.id === contactId);\n  };\n  const contacts = useSelector(selectContacts);\n  const contact = getContactById({ contactId, contacts });\n\n  const backLinkHref = location.state?.from ?? '/contacts';\n\n  const successEditContact = ({ contact, updatedContact }) => {\n    showEditContactSuccess(contact, updatedContact);\n    navigate('/contacts');\n  };\n  return contact ? (\n    <>\n      <AppBar />\n      <main>\n        <Section>\n          <ContentWrapper>\n            <BackButton to={backLinkHref}>\n              <button type=\"button\" aria-label=\"Back to previous page\">\n                {renderIcons('back', 50)}\n              </button>\n            </BackButton>\n\n            <>\n              <EditFormInfo>\n                <p>You try to edit contact with:</p>\n                <p>\n                  <span>Name:</span>\n                  <span>\n                    <b>{contact.name}</b>\n                  </span>\n                </p>\n                <p>\n                  <span>Number:</span>\n                  <span>\n                    <b>{contact.number}</b>\n                  </span>\n                </p>\n              </EditFormInfo>\n              <EditFormInstrc>\n                <p>{renderIcons('info', 25)}</p>\n\n                <p>\n                  Modify only one field for a contact - either the <b>name </b>\n                  or <b>number</b>. If you need to change both, delete the\n                  existing contact and create a new one.\n                </p>\n              </EditFormInstrc>\n              <ContactForm\n                action=\"Edit contact\"\n                contact={contact}\n                onSubmit={successEditContact}\n              />\n            </>\n          </ContentWrapper>\n        </Section>\n      </main>\n    </>\n  ) : (\n    <Loader />\n  );\n};\n\nexport default EditContact;\n"],"names":["Header","styled","StyledAppBar","props","theme","devices","tablet","AppBar","isLoggedIn","useAuth","BackButton","NavLink","PhoneInput","mobile","Info","InfoWrap","ContentWrapper","Container","desktop","AddNewContactBtn","FilterList","EditFormInfo","EditFormInstrc","location","useLocation","dispatch","useDispatch","contactId","useParams","navigate","useNavigate","useEffect","fetchContacts","contact","contacts","find","id","getContactById","useSelector","selectContacts","backLinkHref","state","from","to","type","renderIcons","name","number","action","onSubmit","updatedContact","showEditContactSuccess"],"sourceRoot":""}
{"version":3,"file":"static/js/605.ef323a97.chunk.js","mappings":"+OAEaA,EAAeC,EAAAA,GAAAA,IAAH,2YASS,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAAQC,MAAxB,IAa1BC,EAAiBL,EAAAA,GAAAA,IAAH,kRASS,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAAQC,MAAxB,I,8CCoDzC,EAzEoB,WAAO,IAAD,IAClBE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACTC,GAAcC,EAAAA,EAAAA,MAAdD,UACFE,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRN,GAASO,EAAAA,EAAAA,MACV,GAAE,CAACP,IAEJ,IAIMQ,EAJiB,SAAC,GAA6B,IAA3BN,EAA0B,EAA1BA,UACxB,OADkD,EAAfO,SACnBC,MAAK,SAAAF,GAAO,OAAIA,EAAQG,KAAOT,CAAnB,GAC7B,CAEeU,CAAe,CAAEV,UAAAA,EAAWO,UAD3BI,EAAAA,EAAAA,IAAYC,EAAAA,MAEvBC,EAAY,oBAAGjB,EAASkB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,YAM7C,OAAOT,GACL,iCACE,SAAC,KAAD,KACA,2BACE,SAAC,KAAD,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAYU,GAAIH,EAAhB,UACE,mBAAQI,KAAK,SAAS,aAAW,wBAAjC,UACGC,EAAAA,EAAAA,IAAY,OAAQ,SAIzB,iCACE,UAAC7B,EAAD,YACE,uBAAG,mCACH,0BACE,0BAAM,WACN,2BACE,uBAAIiB,EAAQa,aAGhB,0BACE,0BAAM,aACN,2BACE,uBAAIb,EAAQc,kBAIlB,UAACzB,EAAD,YACE,wBAAIuB,EAAAA,EAAAA,IAAY,OAAQ,OAExB,yBAAG,qDACgD,uBAAG,UAAS,OAC1D,uBAAG,WAAU,yFAIpB,SAAC,IAAD,CACEG,OAAQC,EAAAA,GAAAA,KACRhB,QAASA,EACTiB,SA5Ca,SAAC,GAAiC,IAA/BjB,EAA8B,EAA9BA,QAASkB,EAAqB,EAArBA,gBACrCC,EAAAA,EAAAA,wBAAuBnB,EAASkB,GAChCtB,EAAS,YACV,kBAiDC,SAAC,KAAD,GAEH,C","sources":["pages/EditContact/EditContact.styled.jsx","pages/EditContact/EditContact.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const EditFormInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n  padding: 10px;\n  background-color: #fab7d2;\n  border-radius: 10px;\n  font-size: 14px;\n  font-weight: 600;\n  @media screen and (min-width: ${props => props.theme.devices.tablet}) {\n    font-size: 16px;\n  }\n  p {\n    display: flex;\n    column-gap: 10px;\n  }\n  p span:first-child {\n    width: 100px;\n    font-style: italic;\n  }\n`;\n\nexport const EditFormInstrc = styled.div`\n  display: flex;\n  p {\n    padding-left: 10px;\n    padding-right: 10px;\n    font-size: 12px;\n    line-height: 1.5;\n    font-style: italic;\n    text-align: justify;\n    @media screen and (min-width: ${props => props.theme.devices.tablet}) {\n      font-size: 14px;\n    }\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation, useParams, useNavigate } from 'react-router-dom';\nimport { Loader, AppBar } from 'components';\nimport { Section, ContactForm } from 'shared';\nimport { ContentWrapper, BackButton } from 'shared/commonStyledComponents.jsx';\nimport { EditFormInfo, EditFormInstrc } from './EditContact.styled';\nimport { selectContacts, fetchContacts } from 'redux/contacts';\nimport { renderIcons } from 'utils';\nimport { showEditContactSuccess } from 'utils/notifications';\nimport { CONTACT_ACTIONS } from 'constants';\n\nconst EditContact = () => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { contactId } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getContactById = ({ contactId, contacts }) => {\n    return contacts.find(contact => contact.id === contactId);\n  };\n  const contacts = useSelector(selectContacts);\n  const contact = getContactById({ contactId, contacts });\n  const backLinkHref = location.state?.from ?? '/contacts';\n\n  const successEditContact = ({ contact, updatedContact }) => {\n    showEditContactSuccess(contact, updatedContact);\n    navigate('/contacts');\n  };\n  return contact ? (\n    <>\n      <AppBar />\n      <main>\n        <Section>\n          <ContentWrapper>\n            <BackButton to={backLinkHref}>\n              <button type=\"button\" aria-label=\"Back to previous page\">\n                {renderIcons('back', 50)}\n              </button>\n            </BackButton>\n\n            <>\n              <EditFormInfo>\n                <p>You try to edit contact with:</p>\n                <p>\n                  <span>Name:</span>\n                  <span>\n                    <b>{contact.name}</b>\n                  </span>\n                </p>\n                <p>\n                  <span>Number:</span>\n                  <span>\n                    <b>{contact.number}</b>\n                  </span>\n                </p>\n              </EditFormInfo>\n              <EditFormInstrc>\n                <p>{renderIcons('info', 25)}</p>\n\n                <p>\n                  Modify only one field for a contact - either the <b>name </b>\n                  or <b>number</b>. If you need to change both, delete the\n                  existing contact and create a new one.\n                </p>\n              </EditFormInstrc>\n              <ContactForm\n                action={CONTACT_ACTIONS.EDIT}\n                contact={contact}\n                onSubmit={successEditContact}\n              />\n            </>\n          </ContentWrapper>\n        </Section>\n      </main>\n    </>\n  ) : (\n    <Loader />\n  );\n};\n\nexport default EditContact;\n"],"names":["EditFormInfo","styled","props","theme","devices","tablet","EditFormInstrc","location","useLocation","dispatch","useDispatch","contactId","useParams","navigate","useNavigate","useEffect","fetchContacts","contact","contacts","find","id","getContactById","useSelector","selectContacts","backLinkHref","state","from","to","type","renderIcons","name","number","action","CONTACT_ACTIONS","onSubmit","updatedContact","showEditContactSuccess"],"sourceRoot":""}
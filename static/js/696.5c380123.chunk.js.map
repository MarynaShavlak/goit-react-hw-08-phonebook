{"version":3,"file":"static/js/696.5c380123.chunk.js","mappings":"qRAAaA,EAAsB,SAAAC,GACjC,IAAMC,EAAWD,EAASE,OAC1B,OAAoB,IAAbD,EAAA,sBAAkCA,EAAlC,YACR,E,6BCgGD,EAvEiB,WACf,IAAME,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRN,EAASO,EAAAA,KACV,GAAE,CAACP,IAEJ,IAAMQ,GAAmBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC/BC,GAAcF,EAAAA,EAAAA,IAAYG,EAAAA,IAC1BC,GAAYJ,EAAAA,EAAAA,IAAYK,EAAAA,IACxBC,GAAQN,EAAAA,EAAAA,IAAYO,EAAAA,IACpBC,GAAeR,EAAAA,EAAAA,IAAYS,EAAAA,GAC3BC,GAAiBV,EAAAA,EAAAA,IAAYW,EAAAA,GAC7BC,KACDJ,KAAkBE,MAAqBR,EAAYZ,OAExD,OACE,2BACE,SAAC,KAAD,WACE,UAAC,KAAD,WAC0B,IAAvBY,EAAYZ,SACX,iCACE,SAAC,KAAD,CACE,aAAW,kBACXuB,QAAS,kBAAMpB,EAAS,UAAf,EAFX,UAIGqB,EAAAA,EAAAA,GAAY,MAAOC,EAAAA,GAAAA,OAEtB,UAAC,KAAD,WAAM,aACK,0BAAO5B,EAAoBe,KAAoB,0BAG1D,SAAC,KAAD,CAAQc,KAAK,UACb,SAAC,KAAD,CAAQA,KAAK,cAIhBZ,GACC,SAAC,KAAD,IACEE,IAAuB,IAAdF,GACX,SAAC,KAAD,IACEL,EAAiBT,QACnB,+BACE,SAAC,KAAD,CAAa2B,MAAO,CAAEC,KAAMvB,OAE5BiB,GACF,SAAC,KAAD,CACEO,QACEX,GAAgBE,EAAhB,0CACuCF,EADvC,0BACqEE,EADrE,KAEIF,EAAY,0CACuBA,EADvB,kDAEyBE,EAFzB,SAMpB,iCACE,SAAC,KAAD,CAAcS,QAAQ,yFACtB,SAAC,IAAD,CAAQC,KAAK,SAASP,QAAS,kBAAMpB,EAAS,UAAf,EAA/B,SAA0D,uCASvE,C,qIC/FY4B,EAAOC,EAAAA,GAAAA,EAAH,kFAOJC,EAAiBD,EAAAA,GAAAA,IAAH,+HAQdE,EAAmBF,EAAAA,GAAAA,OAAH,glB","sources":["utils/getContactsQuantity.js","pages/Contacts/Contacts.jsx","pages/Contacts/Contacts.styled.jsx"],"sourcesContent":["export const getContactsQuantity = contacts => {\n  const quantity = contacts.length;\n  return quantity === 1 ? `1 contact` : `${quantity} contacts`;\n};\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { Info, ContentWrapper, AddNewContactBtn } from './Contacts.styled';\nimport { Button } from 'components/OperationButton/OperationButton.styled';\nimport {\n  ErrorMessage,\n  Section,\n  ContactList,\n  Filter,\n  Loader,\n  Notification,\n} from 'components';\nimport * as contactsOperations from 'redux/contacts/contactsOperations';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n  selectFilteredContacts,\n} from 'redux/contacts/selectors';\nimport {\n  selectFilterByName,\n  selectFilterByNumber,\n} from 'redux/filters/selectors';\nimport { getContactsQuantity } from 'utils/getContactsQuantity';\nimport { renderIcons } from 'utils/renderIcons';\nimport { iconSize } from 'constants';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const allContacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filterByName = useSelector(selectFilterByName);\n  const filterByNumber = useSelector(selectFilterByNumber);\n  const isFiltered =\n    (!!filterByName || !!filterByNumber) && !!allContacts.length;\n\n  return (\n    <main>\n      <Section>\n        <ContentWrapper>\n          {allContacts.length !== 0 && (\n            <>\n              <AddNewContactBtn\n                aria-label=\"Add new contact\"\n                onClick={() => navigate('/create')}\n              >\n                {renderIcons('add', iconSize.md)}\n              </AddNewContactBtn>\n              <Info>\n                You have <span>{getContactsQuantity(allContacts)}</span> in your\n                phone book\n              </Info>\n              <Filter name=\"name\" />\n              <Filter name=\"number\" />\n            </>\n          )}\n\n          {isLoading ? (\n            <Loader />\n          ) : error && isLoading === false ? (\n            <ErrorMessage />\n          ) : filteredContacts.length ? (\n            <>\n              <ContactList state={{ from: location }} />\n            </>\n          ) : isFiltered ? (\n            <Notification\n              message={\n                filterByName && filterByNumber\n                  ? `Nothing found by selected name \"${filterByName}\"  and number \"${filterByNumber}\"`\n                  : filterByName\n                  ? `Nothing found by selected name \"${filterByName}\" `\n                  : `Nothing found by selected number \"${filterByNumber}\" `\n              }\n            />\n          ) : (\n            <>\n              <Notification message=\"Add your first contact today and discover the amazing possibilities of Phone Genie!\" />\n              <Button type=\"button\" onClick={() => navigate('/create')}>\n                Add contact to phone book\n              </Button>\n            </>\n          )}\n        </ContentWrapper>\n      </Section>\n    </main>\n  );\n};\n\nexport default Contacts;\n","import styled from 'styled-components';\n\nexport const Info = styled.p`\n  font-size: 24px;\n  span {\n    font-weight: 700;\n  }\n`;\n\nexport const ContentWrapper = styled.div`\n  position: relative;\n  width: 800px;\n  display: flex;\n  flex-direction: column;\n  row-gap: 40px;\n`;\n\nexport const AddNewContactBtn = styled.button`\n  position: absolute;\n  right: 0;\n  border-radius: 50%;\n  display: flex;\n  column-gap: 10px;\n  min-width: 40px;\n  align-self: center;\n  align-items: center;\n  padding: 10px 10px;\n  background-color: #f787b4;\n  color: black;\n  border: 5px solid transparent;\n  font-size: 20px;\n  font-weight: 800;\n  box-shadow: 5px 5px 8px 1px rgba(112, 111, 111, 1);\n  cursor: pointer;\n  transition: background-color 300ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: #ef4287;\n    color: white;\n  }\n`;\n"],"names":["getContactsQuantity","contacts","quantity","length","dispatch","useDispatch","navigate","useNavigate","location","useLocation","useEffect","contactsOperations","filteredContacts","useSelector","selectFilteredContacts","allContacts","selectContacts","isLoading","selectIsLoading","error","selectError","filterByName","selectFilterByName","filterByNumber","selectFilterByNumber","isFiltered","onClick","renderIcons","iconSize","name","state","from","message","type","Info","styled","ContentWrapper","AddNewContactBtn"],"sourceRoot":""}
{"version":3,"file":"static/js/856.b0bc8e03.chunk.js","mappings":"iOAuDA,UA5CoB,WAAO,IAAD,IAClBA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACTC,GAAcC,EAAAA,EAAAA,MAAdD,UACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,GAAUC,EAAAA,EAAAA,IAAe,CAAER,UAAAA,EAAWS,SAAUL,KAEtDM,EAAAA,EAAAA,YAAU,WACHN,GACHN,GAASa,EAAAA,EAAAA,MAGZ,GAAE,CAACb,IAEJ,IAAMc,EAAY,oBAChBhB,EAASiB,aADO,aAChB,EAAgBC,YADA,kBACWC,EAAAA,GAAAA,KAAcA,EAAAA,GAAAA,UAM3C,OAAOR,GACL,iCACE,SAAC,KAAD,KACA,2BACE,SAAC,KAAD,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAYS,OAAQJ,KACpB,SAAC,KAAD,CAAsBL,QAASA,KAC/B,SAAC,IAAD,CACEU,OAAQC,EAAAA,GAAAA,KACRX,QAASA,EACTY,SAfe,SAAC,GAAiC,IAA/BZ,EAA8B,EAA9BA,QAASa,EAAqB,EAArBA,gBACrCC,EAAAA,EAAAA,wBAAuBd,EAASa,GAChClB,EAAS,GAAD,OAAIa,EAAAA,GAAAA,KAAcA,EAAAA,GAAAA,UAC3B,eAmBC,SAAC,KAAD,GAEH,C","sources":["pages/EditContact/EditContact.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation, useParams, useNavigate } from 'react-router-dom';\nimport { Loader, AppBar, ContactEditInfoBlock } from 'components';\nimport { Section, ContactForm, BackButton } from 'shared';\nimport { ContentWrapper } from 'shared/commonStyledComponents.jsx';\nimport { selectContacts, fetchContacts } from 'redux/contacts';\nimport { showEditContactSuccess } from 'utils/notifications';\nimport { getContactById } from 'utils';\nimport { CONTACT_ACTIONS, ROUTES } from 'constants';\n\nconst EditContact = () => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { contactId } = useParams();\n  const navigate = useNavigate();\n  const allContacts = useSelector(selectContacts);\n  const contact = getContactById({ contactId, contacts: allContacts });\n\n  useEffect(() => {\n    if (!allContacts) {\n      dispatch(fetchContacts());\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch]);\n\n  const backLinkHref =\n    location.state?.from ?? `${ROUTES.ROOT + ROUTES.CONTACTS}`;\n\n  const successEditContact = ({ contact, updatedContact }) => {\n    showEditContactSuccess(contact, updatedContact);\n    navigate(`${ROUTES.ROOT + ROUTES.CONTACTS}`);\n  };\n  return contact ? (\n    <>\n      <AppBar />\n      <main>\n        <Section>\n          <ContentWrapper>\n            <BackButton pathTo={backLinkHref} />\n            <ContactEditInfoBlock contact={contact} />\n            <ContactForm\n              action={CONTACT_ACTIONS.EDIT}\n              contact={contact}\n              onSubmit={successEditContact}\n            />\n          </ContentWrapper>\n        </Section>\n      </main>\n    </>\n  ) : (\n    <Loader />\n  );\n};\n\nexport default EditContact;\n"],"names":["location","useLocation","dispatch","useDispatch","contactId","useParams","navigate","useNavigate","allContacts","useSelector","selectContacts","contact","getContactById","contacts","useEffect","fetchContacts","backLinkHref","state","from","ROUTES","pathTo","action","CONTACT_ACTIONS","onSubmit","updatedContact","showEditContactSuccess"],"sourceRoot":""}
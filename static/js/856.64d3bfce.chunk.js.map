{"version":3,"file":"static/js/856.64d3bfce.chunk.js","mappings":"sNAsDA,UA5CoB,WAAO,IAAD,IAClBA,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACTC,GAAcC,EAAAA,EAAAA,MAAdD,UACFE,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRN,GAASO,EAAAA,EAAAA,MACV,GAAE,CAACP,IAEJ,IAIMQ,EAJiB,SAAC,GAA6B,IAA3BN,EAA0B,EAA1BA,UACxB,OADkD,EAAfO,SACnBC,MAAK,SAAAF,GAAO,OAAIA,EAAQG,KAAOT,CAAnB,GAC7B,CAEeU,CAAe,CAAEV,UAAAA,EAAWO,UAD3BI,EAAAA,EAAAA,IAAYC,EAAAA,MAEvBC,EAAY,oBAChBjB,EAASkB,aADO,aAChB,EAAgBC,YADA,kBACWC,EAAAA,GAAAA,KAAcA,EAAAA,GAAAA,UAM3C,OAAOV,GACL,iCACE,SAAC,KAAD,KACA,2BACE,SAAC,KAAD,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAYW,OAAQJ,KACpB,SAAC,KAAD,CAAsBP,QAASA,KAC/B,SAAC,IAAD,CACEY,OAAQC,EAAAA,GAAAA,KACRb,QAASA,EACTc,SAfe,SAAC,GAAiC,IAA/Bd,EAA8B,EAA9BA,QAASe,EAAqB,EAArBA,gBACrCC,EAAAA,EAAAA,wBAAuBhB,EAASe,GAChCnB,EAAS,GAAD,OAAIc,EAAAA,GAAAA,KAAcA,EAAAA,GAAAA,UAC3B,eAmBC,SAAC,KAAD,GAEH,C","sources":["pages/EditContact/EditContact.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation, useParams, useNavigate } from 'react-router-dom';\nimport { Loader, AppBar, ContactEditInfoBlock } from 'components';\nimport { Section, ContactForm, BackButton } from 'shared';\nimport { ContentWrapper } from 'shared/commonStyledComponents.jsx';\nimport { selectContacts, fetchContacts } from 'redux/contacts';\nimport { showEditContactSuccess } from 'utils/notifications';\nimport { CONTACT_ACTIONS, ROUTES } from 'constants';\n\nconst EditContact = () => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { contactId } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getContactById = ({ contactId, contacts }) => {\n    return contacts.find(contact => contact.id === contactId);\n  };\n  const contacts = useSelector(selectContacts);\n  const contact = getContactById({ contactId, contacts });\n  const backLinkHref =\n    location.state?.from ?? `${ROUTES.ROOT + ROUTES.CONTACTS}`;\n\n  const successEditContact = ({ contact, updatedContact }) => {\n    showEditContactSuccess(contact, updatedContact);\n    navigate(`${ROUTES.ROOT + ROUTES.CONTACTS}`);\n  };\n  return contact ? (\n    <>\n      <AppBar />\n      <main>\n        <Section>\n          <ContentWrapper>\n            <BackButton pathTo={backLinkHref} />\n            <ContactEditInfoBlock contact={contact} />\n            <ContactForm\n              action={CONTACT_ACTIONS.EDIT}\n              contact={contact}\n              onSubmit={successEditContact}\n            />\n          </ContentWrapper>\n        </Section>\n      </main>\n    </>\n  ) : (\n    <Loader />\n  );\n};\n\nexport default EditContact;\n"],"names":["location","useLocation","dispatch","useDispatch","contactId","useParams","navigate","useNavigate","useEffect","fetchContacts","contact","contacts","find","id","getContactById","useSelector","selectContacts","backLinkHref","state","from","ROUTES","pathTo","action","CONTACT_ACTIONS","onSubmit","updatedContact","showEditContactSuccess"],"sourceRoot":""}